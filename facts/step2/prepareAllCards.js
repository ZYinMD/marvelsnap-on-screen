import fs from 'node:fs/promises';
const inputPath = new URL('../step1/allCardsFromUntappedGg.json', import.meta.url);
const inputRaw = await fs.readFile(inputPath, { encoding: 'utf-8' });
const input = JSON.parse(inputRaw);

const result = {};
for (const card of input) {
  if (card.defId.includes('Evolved')) continue; // some cards (evolved High Evolutionary cards) have some weird <color> tags, we don't need these cards anyway.
  if (card.defId.includes('Tutorial')) continue; // some weird tutorial cards with a duplicated name with the real card, we don't need them
  if (card.attributes?.cards?.Card_Source) continue; // when this is present, it means the card is generated by another card, e.g. broodling, snowguard bear, etc. They sometimes have duplicated names, we don't need them anyway
  if (card.name in result) throw new Error(`Duplicated card id: ${card.name}`);
  delete card.artists; // many cards have this field, we don't need
  result[card.name] = card;
}

const outputPath = new URL('../../ui/src/lib/facts/allCards.ts', import.meta.url);
const output = `export const allCards = ${JSON.stringify(result)} as const;`;
fs.writeFile(outputPath, output);
